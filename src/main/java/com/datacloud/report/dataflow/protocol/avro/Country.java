/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.datacloud.report.dataflow.protocol.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Country extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6436897070922744413L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Country\",\"namespace\":\"com.datacloud.report.dataflow.protocol.avro\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"tenant\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"ts\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"provinces\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Province\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"area\",\"type\":\"double\"},{\"name\":\"cities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"City\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"population\",\"type\":\"long\"}]}}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.Integer tenant;
  @Deprecated public java.lang.Long ts;
  @Deprecated public java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> provinces;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Country() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param tenant The new value for tenant
   * @param ts The new value for ts
   * @param provinces The new value for provinces
   */
  public Country(java.lang.String name, java.lang.Integer tenant, java.lang.Long ts, java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> provinces) {
    this.name = name;
    this.tenant = tenant;
    this.ts = ts;
    this.provinces = provinces;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return tenant;
    case 2: return ts;
    case 3: return provinces;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: tenant = (java.lang.Integer)value$; break;
    case 2: ts = (java.lang.Long)value$; break;
    case 3: provinces = (java.util.List<com.datacloud.report.dataflow.protocol.avro.Province>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'tenant' field.
   * @return The value of the 'tenant' field.
   */
  public java.lang.Integer getTenant() {
    return tenant;
  }

  /**
   * Sets the value of the 'tenant' field.
   * @param value the value to set.
   */
  public void setTenant(java.lang.Integer value) {
    this.tenant = value;
  }

  /**
   * Gets the value of the 'ts' field.
   * @return The value of the 'ts' field.
   */
  public java.lang.Long getTs() {
    return ts;
  }

  /**
   * Sets the value of the 'ts' field.
   * @param value the value to set.
   */
  public void setTs(java.lang.Long value) {
    this.ts = value;
  }

  /**
   * Gets the value of the 'provinces' field.
   * @return The value of the 'provinces' field.
   */
  public java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> getProvinces() {
    return provinces;
  }

  /**
   * Sets the value of the 'provinces' field.
   * @param value the value to set.
   */
  public void setProvinces(java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> value) {
    this.provinces = value;
  }

  /**
   * Creates a new Country RecordBuilder.
   * @return A new Country RecordBuilder
   */
  public static com.datacloud.report.dataflow.protocol.avro.Country.Builder newBuilder() {
    return new com.datacloud.report.dataflow.protocol.avro.Country.Builder();
  }

  /**
   * Creates a new Country RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Country RecordBuilder
   */
  public static com.datacloud.report.dataflow.protocol.avro.Country.Builder newBuilder(com.datacloud.report.dataflow.protocol.avro.Country.Builder other) {
    return new com.datacloud.report.dataflow.protocol.avro.Country.Builder(other);
  }

  /**
   * Creates a new Country RecordBuilder by copying an existing Country instance.
   * @param other The existing instance to copy.
   * @return A new Country RecordBuilder
   */
  public static com.datacloud.report.dataflow.protocol.avro.Country.Builder newBuilder(com.datacloud.report.dataflow.protocol.avro.Country other) {
    return new com.datacloud.report.dataflow.protocol.avro.Country.Builder(other);
  }

  /**
   * RecordBuilder for Country instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Country>
    implements org.apache.avro.data.RecordBuilder<Country> {

    private java.lang.String name;
    private java.lang.Integer tenant;
    private java.lang.Long ts;
    private java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> provinces;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.datacloud.report.dataflow.protocol.avro.Country.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tenant)) {
        this.tenant = data().deepCopy(fields()[1].schema(), other.tenant);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ts)) {
        this.ts = data().deepCopy(fields()[2].schema(), other.ts);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.provinces)) {
        this.provinces = data().deepCopy(fields()[3].schema(), other.provinces);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Country instance
     * @param other The existing instance to copy.
     */
    private Builder(com.datacloud.report.dataflow.protocol.avro.Country other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tenant)) {
        this.tenant = data().deepCopy(fields()[1].schema(), other.tenant);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ts)) {
        this.ts = data().deepCopy(fields()[2].schema(), other.ts);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.provinces)) {
        this.provinces = data().deepCopy(fields()[3].schema(), other.provinces);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tenant' field.
      * @return The value.
      */
    public java.lang.Integer getTenant() {
      return tenant;
    }

    /**
      * Sets the value of the 'tenant' field.
      * @param value The value of 'tenant'.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder setTenant(java.lang.Integer value) {
      validate(fields()[1], value);
      this.tenant = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tenant' field has been set.
      * @return True if the 'tenant' field has been set, false otherwise.
      */
    public boolean hasTenant() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tenant' field.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder clearTenant() {
      tenant = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ts' field.
      * @return The value.
      */
    public java.lang.Long getTs() {
      return ts;
    }

    /**
      * Sets the value of the 'ts' field.
      * @param value The value of 'ts'.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder setTs(java.lang.Long value) {
      validate(fields()[2], value);
      this.ts = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ts' field has been set.
      * @return True if the 'ts' field has been set, false otherwise.
      */
    public boolean hasTs() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ts' field.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder clearTs() {
      ts = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'provinces' field.
      * @return The value.
      */
    public java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> getProvinces() {
      return provinces;
    }

    /**
      * Sets the value of the 'provinces' field.
      * @param value The value of 'provinces'.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder setProvinces(java.util.List<com.datacloud.report.dataflow.protocol.avro.Province> value) {
      validate(fields()[3], value);
      this.provinces = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'provinces' field has been set.
      * @return True if the 'provinces' field has been set, false otherwise.
      */
    public boolean hasProvinces() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'provinces' field.
      * @return This builder.
      */
    public com.datacloud.report.dataflow.protocol.avro.Country.Builder clearProvinces() {
      provinces = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Country build() {
      try {
        Country record = new Country();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.tenant = fieldSetFlags()[1] ? this.tenant : (java.lang.Integer) defaultValue(fields()[1]);
        record.ts = fieldSetFlags()[2] ? this.ts : (java.lang.Long) defaultValue(fields()[2]);
        record.provinces = fieldSetFlags()[3] ? this.provinces : (java.util.List<com.datacloud.report.dataflow.protocol.avro.Province>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
